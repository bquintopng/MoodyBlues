{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import LoginButton from\"./components/LoginButton\";import MoodSelect from\"./components/MoodSelect\";import Playlist from\"./components/Playlist\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[accessToken,setAccessToken]=useState(null);const[songs,setSongs]=useState([]);useEffect(()=>{const params=new URLSearchParams(window.location.search);const token=params.get(\"access_token\");if(token){setAccessToken(token);}},[]);const handleMoodSelect=async _ref=>{let{background,face,body}=_ref;const response=await axios.get(\"/recommendations\",{params:{background,face,body,access_token:accessToken}});setSongs(response.data.songs);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Moody Blues\"}),!accessToken&&/*#__PURE__*/_jsx(LoginButton,{}),accessToken&&!songs.length&&/*#__PURE__*/_jsx(MoodSelect,{onMoodSelect:handleMoodSelect}),songs.length>0&&/*#__PURE__*/_jsx(Playlist,{songs:songs})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","LoginButton","MoodSelect","Playlist","jsx","_jsx","jsxs","_jsxs","App","accessToken","setAccessToken","songs","setSongs","params","URLSearchParams","window","location","search","token","get","handleMoodSelect","_ref","background","face","body","response","access_token","data","className","children","length","onMoodSelect"],"sources":["/Users/bquinto/Documents/moody-blues/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport LoginButton from \"./components/LoginButton\";\nimport MoodSelect from \"./components/MoodSelect\";\nimport Playlist from \"./components/Playlist\";\n\nconst App = () => {\n  const [accessToken, setAccessToken] = useState(null);\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const token = params.get(\"access_token\");\n    if (token) {\n      setAccessToken(token);\n    }\n  }, []);\n\n  const handleMoodSelect = async ({ background, face, body }) => {\n    const response = await axios.get(`/recommendations`, {\n      params: {\n        background,\n        face,\n        body,\n        access_token: accessToken,\n      },\n    });\n    setSongs(response.data.songs);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Moody Blues</h1>\n      {!accessToken && <LoginButton />}\n      {accessToken && !songs.length && (\n        <MoodSelect onMoodSelect={handleMoodSelect} />\n      )}\n      {songs.length > 0 && <Playlist songs={songs} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,MAAM,CAAG,GAAI,CAAAC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAC1D,KAAM,CAAAC,KAAK,CAAGL,MAAM,CAACM,GAAG,CAAC,cAAc,CAAC,CACxC,GAAID,KAAK,CAAE,CACTR,cAAc,CAACQ,KAAK,CAAC,CACvB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,gBAAgB,CAAG,MAAAC,IAAA,EAAsC,IAA/B,CAAEC,UAAU,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAAH,IAAA,CACxD,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAzB,KAAK,CAACmB,GAAG,oBAAqB,CACnDN,MAAM,CAAE,CACNS,UAAU,CACVC,IAAI,CACJC,IAAI,CACJE,YAAY,CAAEjB,WAChB,CACF,CAAC,CAAC,CACFG,QAAQ,CAACa,QAAQ,CAACE,IAAI,CAAChB,KAAK,CAAC,CAC/B,CAAC,CAED,mBACEJ,KAAA,QAAKqB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBxB,IAAA,OAAAwB,QAAA,CAAI,aAAW,CAAI,CAAC,CACnB,CAACpB,WAAW,eAAIJ,IAAA,CAACJ,WAAW,GAAE,CAAC,CAC/BQ,WAAW,EAAI,CAACE,KAAK,CAACmB,MAAM,eAC3BzB,IAAA,CAACH,UAAU,EAAC6B,YAAY,CAAEX,gBAAiB,CAAE,CAC9C,CACAT,KAAK,CAACmB,MAAM,CAAG,CAAC,eAAIzB,IAAA,CAACF,QAAQ,EAACQ,KAAK,CAAEA,KAAM,CAAE,CAAC,EAC5C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}